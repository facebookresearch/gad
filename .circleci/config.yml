version: 1
jobs:
  lint:
    docker:
      - image: circleci/rust:stretch
    steps:
      - checkout
      - run:
          name: Install Rust Components
          command: |
            rustup default stable
            rustup update
            rustup component add rustfmt clippy
      - run:
          name: Version Information
          command: rustc --version; cargo --version; rustup --version; rustup show
      - run:
          name: Component Version Information
          command: cargo fmt -- --version; cargo clippy -- --version
      - run:
          name: Setup Env
          command: |
            echo 'export RUSTFLAGS="-D warnings"' >> $BASH_ENV
      - run:
          name: Lint (rustfmt)
          command: |
            cargo fmt -- --check
      - run:
          name: Lint (clippy)
          command: |
            cargo clippy
  build:
    docker:
      - image: circleci/rust:stretch
    steps:
      - checkout
      - run:
          name: Install Components
          command: |
            sudo apt-get update
            sudo apt-get install libarrayfire-cpu-dev libarrayfire-unified-dev opencl-dev
            sudo ln -s /usr/lib/x86_64-linux-gnu/libaf* /usr/lib
            ls -l /usr/lib/libaf*
            export AF_PATH=/usr
            export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:$AF_PATH/lib
      - run:
          name: Install Rust Components
          command: |
            rustup default stable
            rustup update
      - run:
          name: Version Information
          command: rustc --version; cargo --version; rustup --version; rustup show
      - run:
          name: Setup Env
          command: |
            echo 'export RUSTFLAGS="-D warnings"' >> $BASH_ENV
      - run:
          name: Build and Test
          # Build all targets to ensure examples are built as well.
          command: |
            cargo build --all-targets
            cargo test

  build-no-default-features:
    docker:
      - image: circleci/rust:stretch
    steps:
      - checkout
      - run:
          name: Install Rust Components
          command: |
            rustup default stable
            rustup update
      - run:
          name: Version Information
          command: rustc --version; cargo --version; rustup --version; rustup show
      - run:
          name: Setup Env
          command: |
            echo 'export RUSTFLAGS="-D warnings"' >> $BASH_ENV
      - run:
          name: Build and Test
          # Build all targets to ensure examples are built as well.
          command: |
            (cd gad && cargo test --no-default-features)

  # docs-build and docs-deploy are adapted from
  # https://circleci.com/blog/deploying-documentation-to-github-pages-with-continuous-integration/.
  docs-build:
    docker:
      - image: circleci/rust:stretch
    steps:
      - checkout
      - run:
          name: Install Rust Components
          command: |
            rustup default stable
            rustup update
      - run:
          name: Version Information
          command: rustc --version; cargo --version; rustup --version; rustup show
      - run:
          name: Generate documentation
          command: |
            cargo doc
      - persist_to_workspace:
          root: target
          paths: doc

workflows:
  version: 2
  build:
    jobs:
      - lint
      - build
      - build-no-default-features
      - docs-build
